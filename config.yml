---
## Настройки доменных имен. На все эти имена при создании инфраструктуры
#  будет выделен один статический внешний IP. Разумеется, вместо dev.cbg.ru
#  нужно подставить вашу зону.

# TODO: автоматически генерировать при создании инфраструктуры через Terraform
# domain_names = ["www", "app", "gitlab", "prometheus", "grafana", "alertmanager", "runner"]

# Доменные имена сервера приложения для доступа через обратный прокси.
www_domain: www.dev.cbg.ru
app_domain: app.dev.cbg.ru

# Доменное имя сервера Gitlab для доступа через обратный прокси.
gitlab_domain: gitlab.dev.cbg.ru

grafana_domain: grafana.dev.cbg.ru
prometheus_domain: prometheus.dev.cbg.ru
alertmanager_domain: alertmanager.dev.cbg.ru
runner_domain: runner.dev.cbg.ru

## Настройки для получения сертификата Let's Encrypt.
#  Дополнительные параметры для certbot. Не забудьте подставить свой адрес.
#  Уберите --test-cert, если нужен действительный сертификат.
#  Запускаться будет как certbot --nginx --noninteractive --agree-tos <дополнительные параметры> -d <имя домена>
certbot_args: "--email ivgrand@gmail.com --test-cert"

## Настройки MySQL. Пароли к базе данных зашифрованы очень сложным паролем,
#  запускайте ansible-playbook с ключом --ask-vault-password.
#  О том, как узнать пароль, см. README.md. Или же установите свои пароли.

# Пароль администратора MySQL
mysql_root_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  36633663306365373130323638303361353235373233613733313963393462343139326565646364
  6263333966613966623163623432316535353639383865650a636531373365373661386534336363
  36646130356261333130373830376362356463336238666639396265643539613533356261396233
  3161363935623431330a653966663833633735666265373735396662393433613964306263306433
  35343231346561393236653363646162376438646632633864653861303265396531
# Хост с базой данных для приложения во внутренней сети.
mysql_host: "db01.ru-central1.internal"
# База данных для приложения (в данном случае для WordPress)
mysql_app_db: "wordpress"
# Имя пользователя для приложения (в данном случае для WordPress)
mysql_app_user: "wordpress"
# Пароль пользователя для приложения
mysql_app_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  32363233353233623163306539396436613631373263373038326161343761333666323331646432
  3432383033393239346634326666363266383735353931360a626362386266636139373935613431
  38616531613639386365326334316536653261326233653233396538376135313536343739383735
  6364323536383239630a646134343765653138373965316362333031663732353336623763353435
  6162

# Настройки репликации MySQL.
# Пользователь для репликации, создается на мастер-сервере.
mysql_replication_user: "repl_user"
# Пароль пользователя для репликации.
mysql_replication_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  33346639656265626631616565646332336463303034376266333932363566333239356564643863
  3063343839383939313638666537386536633333336262620a363436313564323632623962633634
  34373665323465313865313265373135333033333533643032333132656166376532613130346565
  3031363761346564380a653237363364346237623966343064333235623131393365626133316466
  6137
# Мастер-сервер для репликации
mysql_master: "db01.ru-central1.internal"
# Сервер-реплика
mysql_replica: "db02.ru-central1.internal"
# Идентификаторы мастер-сервера и реплики. Должны быть разными и уникальными.
mysql_id_master: 10
mysql_id_slave: 20

# Настройки обратного проксирования NGINX
# Имя сервера во внутренней сети, где установлен основной обратный прокси.
# Это машина, на которую выделяется статический внешний IP.
rev_proxy_domain: nginx.ru-central1.internal

# Машина, на которой работает приложение (WordPress)
app_upstream: app.ru-central1.internal
# Машина, на которой работает Gitlab
gitlab_upstream: gitlab.ru-central1.internal

# Должен соответствовать resource "yandex_vpc_subnet" "subnet-a" в конфигурации терраформа.
# TODO: автоматизировать генерацию
resolver: "192.168.30.2"

## Настройки приложения WordPress
#  Корневой каталог WordPress на сервере приложения app_upstream.
app_doc_root: "/var/www/wordpress"

# Пользователь, от имени которого работают NGINX на прокси и на сервере приложения.
nginx_owner: www-data
nginx_group: www-data
